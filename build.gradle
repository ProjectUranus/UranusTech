plugins {
	id "fabric-loom" version "0.2.5-SNAPSHOT"
	id "org.jetbrains.kotlin.jvm" version "1.3.50"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
	jcenter()
    maven {
        url = "http://maven.fabricmc.net/"
        name = "Fabric"
    }
    maven {
        url = "https://kotlin.bintray.com/kotlinx"
        name = "Kotlin X"
    }
	maven { url "https://minecraft.curseforge.com/api/maven"}
}

minecraft {
}

dependencies {
//	modImplementation "cloth-config:ClothConfig2:0.2.0"
//	modImplementation "cloth:ClothEvents:0.3.1.23"
//	modImplementation "roughly-enough-items:RoughlyEnoughItems:2.9.4+build.129"
	modImplementation(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.50+build.3")
	implementation(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.50+build.3")
	include "javax.vecmath:vecmath:1.5.2"

	testCompile "junit:junit:4.12"

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	// this will ensure that this task is re-run when there's a change
	inputs.property "version", project.version

	// replace stuff in fabric.mod.json, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"

		// add mod metadata
		expand "version": project.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
