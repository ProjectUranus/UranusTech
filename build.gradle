plugins {
	id "fabric-loom" version "0.2.6-SNAPSHOT"
	id "java"
	id "org.jetbrains.kotlin.jvm" version "1.3.50"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
	jcenter()
    maven {
        url = "http://maven.fabricmc.net/"
        name = "Fabric"
    }
    maven {
        url = "https://kotlin.bintray.com/kotlinx"
        name = "Kotlin X"
    }
}

minecraft {
}

dependencies {
//	modImplementation "cloth-config:ClothConfig2:0.2.0"
//	modImplementation "cloth:ClothEvents:0.3.1.23"
//	modImplementation "roughly-enough-items:RoughlyEnoughItems:2.9.4+build.129"

	include "javax.vecmath:vecmath:1.5.2"
	
	// ClothConfig2
	modImplementation "me.shedaniel.cloth:config-2:1.5.1"
	include "me.shedaniel.cloth:config-2:1.5.1"

	modImplementation "io.github.prospector:modmenu:1.7.9+build.118"

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        exclude group: 'net.fabricmc', module: 'fabric-loader' // Exclude old fabric-loader version
    }
	
	// Fabric Language Kotlin
	modImplementation(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.50+build.3") {
		exclude group: 'net.fabricmc', module: 'fabric-loader' // Exclude old fabric-loader version
	}
	compile(group: "net.fabricmc", name: "fabric-language-kotlin", version: "1.3.50+build.3") {
		exclude group: 'net.fabricmc', module: 'fabric-loader' // Exclude old fabric-loader version
	}
	
	testCompile "junit:junit:4.12"
}

processResources {
	// this will ensure that this task is re-run when there's a change
	inputs.property "version", project.version

	// replace stuff in fabric.mod.json, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"

		// add mod metadata
		expand "version": project.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
